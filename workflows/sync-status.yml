name: Sync Status to Overall Dev Tracker

on:
  workflow_call:
    inputs:
      issue_number:
        required: true
        type: string
      new_status:
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Sync status to Overall Dev Tracker
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const issueNumber = ${{ inputs.issue_number }};
            const newStatus = ${{ inputs.new_status }};
            const dashboardProjectId = "PVT_kwDOC5NMC84A1r0v";
            const statusFieldId = "PVTSSF_lADOC5NMC84A1r0vzgrHUmU";

            const statusMap = {
              "Backlog": "f75ad846",
              "To-Do": "ed0c20ce",
              "Ready": "61e4505c",
              "In progress": "47fc9ee4",
              "In review": "df73e18b",
              "Done": "98236657"
            };

            if (!statusMap[newStatus]) {
              console.log("Invalid status. Skipping.");
              return;
            }

            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });

            const issueNodeId = issue.node_id;

            const result = await github.graphql(`
              query {
                node(id: "${dashboardProjectId}") {
                  ... on ProjectV2 {
                    items(first: 100) {
                      nodes {
                        id
                        content {
                          ... on Issue {
                            id
                          }
                        }
                      }
                    }
                  }
                }
              }
            `);

            const item = result.node.items.nodes.find(n => n.content?.id === issueNodeId);
            if (!item) {
              console.log("Issue not found in Overall Dev Tracker.");
              return;
            }

            await github.graphql(`
              mutation {
                updateProjectV2ItemFieldValue(input: {
                  projectId: "${dashboardProjectId}",
                  itemId: "${item.id}",
                  fieldId: "${statusFieldId}",
                  value: {
                    singleSelectOptionId: "${statusMap[newStatus]}"
                  }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `);
